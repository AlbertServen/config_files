{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":61,"width":1050,"height":1619,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs"],"buffers":[{"id":"ca8b1061d32ea5bf5230eba8a0e40eb4","text":"module.exports = {\n    environment: 'production',\n    database: 'bh',\n    mongoHost: 'mongodb',\n\n    SINK_EMAIL: 'albert.serven@bellahora.com'\n};\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"229":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":1,"column":15},"end":{"row":1,"column":15}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2},"15":{"id":"15","maintainHistory":false,"markersById":{},"version":2},"16":{"id":"16","maintainHistory":false,"markersById":{},"version":2},"24":{"id":"24","maintainHistory":false,"markersById":{},"version":2},"25":{"id":"25","maintainHistory":false,"markersById":{},"version":2},"35":{"id":"35","maintainHistory":false,"markersById":{},"version":2},"36":{"id":"36","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":37,"history":{"version":3,"nextCheckpointId":119,"undoStack":[],"redoStack":[{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,28],[1,28]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"t","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,28],[1,28]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,28],[1,28]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"n","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"m","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"p","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"o","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"l","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"v","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[1,28],[1,29]],"newRange":[[1,28],[1,28]],"oldText":"d","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,28],[1,28]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,28],[1,28]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,18],[1,22]],"newRange":[[1,18],[1,28]],"oldText":"prod","newText":"production"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,22],[1,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,22],[1,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,21],[1,21]],"newRange":[[1,21],[1,22]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[1,20],[1,20]],"newRange":[[1,20],[1,21]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[1,19],[1,19]],"newRange":[[1,19],[1,20]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[1,18],[1,18]],"newRange":[[1,18],[1,19]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[1,17],[1,17]],"newRange":[[1,17],[1,18]],"oldText":"","newText":"'"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,17],[1,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,17],[1,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,17],[1,18]],"newRange":[[1,17],[1,17]],"oldText":"p","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,18],[1,18]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[1,18],[1,18]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[1,17],[1,17]],"newRange":[[1,17],[1,18]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[1,17],[1,18]],"newRange":[[1,17],[1,17]],"oldText":"'","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[1,18],[1,18]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}]},"encoding":"utf8","filePath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/config.js","digestWhenLastPersisted":"887f96cdc8feb71076e9a7d96af8816e5ee60c61","preferredLineEnding":null,"nextMarkerId":231,"deserializer":"TextBuffer","version":5},{"id":"f76245b3bdb14f981b6de4fbb225c191","text":"'use strict';\n\nvar jobName   = 'mailing:index',\n    debug     = require('debug')(jobName),\n    async     = require('async'),\n    knox      = require('knox'),\n    Promise   = require('bluebird'),\n    _         = require('lodash'),\n\n    projectPath = '../../',\n    modelPath   = projectPath + 'common/model/',\n    utilsPath   = projectPath + 'common/utils/',\n\n    helpers  = require('./helpers.js'),\n    config   = require(projectPath + 'config'),\n    logger   = require(utilsPath + 'logentries'),\n    segments = require(utilsPath + 'segments'),\n    mailer   = require(utilsPath + 'sendgrid'),\n\n    Mailing     = require(modelPath + 'Mailing').model(),\n    User        = require(modelPath + 'User').model(),\n    PreUser     = require(modelPath + 'PreUser').model(),\n\n    S3_CONFIG = {\n        key   : 'AKIAI452K7PQRA5GSO7A',\n        secret: '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',\n        bucket: 'bellahora-mailing'\n    },\n    s3client;\n\nrequire('date-utils');\n\nvar MailingApp = {\n        preventDuplicates: []       // Here is stored all emails that are sent in this exec\n    },\n    CHUNKS = 500,\n    defaultParams = {\n        from    : 'info@newsletter.bellahora.com',\n        fromName: 'Bellahora',\n        headers : {\n            'Reply-To': 'contacta@bellahora.com'\n        },\n        trackOpens : true,\n        trackClicks: true\n    };\n\n/* ---------------------------------- WARNING ----------------------------------\n    if  the segment is greater than 69000 users, the memory of node will run out\n    need to add this argument when executing node:\n// TODO: look for memory leaks, garbage collector\n\n    --max-old-space-size=SIZE\n\n    with SIZE being the number of bytes (Ex: 4096) Node default is 512\n    ----------------------------------------------------------------------------\n*/\n\n// results contain calculated blocks, an array of objects\n// {block_name: {email: value}}\nMailingApp.sendChunk = function(specs, subarray, results) {\n    var to         = [],\n        uniqueVars = helpers.createUniqueVars(subarray,\n                    specs.params.from, specs.mailing.campaign);\n\n    _.each(results, function(r) {\n        specs.params.section = _.extend({}, specs.params.section, r.section);\n        to = to.concat(_.keys(r.emails));\n    });\n    if (!_.isEmpty(results)) {\n        specs.params.to = _.uniq(to);\n    } else {\n        specs.params.to = _.keys(uniqueVars);\n    }\n    specs.params.sub = helpers.mergeVars(uniqueVars, results, specs.params.to);\n\n    // Envio a hora detallada\n    specs.params.sendAt = Math.floor(specs.mailing.date.getTime()/1000);\n\n    debug('Send with params', _.omit(specs.params, ['to', 'html', 'section']));\n    debug('Send at %s', specs.mailing.date.toString());\n    if (config.environment === 'production') {\n        console.log('Sending with SendGrid.');\n        mailer.send.html(specs.params).catch(function(err) {\n            logger.error(err);\n        });  // DESCOMENTAR BAJO SU RESPONSABILIDAD\n    } else {\n        console.log('Development environment: NOT SENDING');\n    }\n};\n\n/**\n * Recursive function that processes users by chunks, while the index is lesser than\n * the users length, it keeps calling itself and finally resolves\n * @param  {Object} specs  Contains:\n *                 - {Object} m      Attributes: templateName, segmentName, subject, campaign, day\n *                 - {Object} params Parameters to send emails\n *                 - {Array} users   Array of users given by a segment\n *                 - {Array} blocks  Array of blocks in the template. Each Attributes: path, data\n *                 - {Object} cache  Object containing computation for the block\n *                 - {Number} index  Indicates the current position to process\n * @return {Promise}       When all is done, resolves\n */\nMailingApp.calcChunksAndSend = function(specs) {\n    return new Promise(function(resolve, reject) {\n        var execBlocks = [],\n            length     = specs.index + CHUNKS,\n            subarray   = specs.users.slice(specs.index, length);\n\n        debug('Chunk %s - %s', specs.index,\n            length <= specs.users.length ? length : specs.users.length);\n\n        _.each(specs.blocks, function(block) {\n            debug('Process block', block);\n            var blockJs = require(block.path);\n            block.settings.campaign = specs.mailing.campaign;\n            execBlocks.push(blockJs(specs.cache, subarray, block.settings));\n        });\n\n        Promise.all(execBlocks).then(function(results) {\n            debug('Processing blocks...');\n            console.log('Sending chunk', specs.index/CHUNKS, ':', specs.index, '-',\n                    length <= specs.users.length ? length : specs.users.length);\n\n            MailingApp.sendChunk(specs, subarray, results);\n            if (length >= specs.users.length) {\n                resolve();\n            } else {\n// Give breath to mailer for sending emails\n                setTimeout(function() {\n                    specs.index = length;\n                    MailingApp.calcChunksAndSend(specs).then(function(){\n                        resolve();\n                    });\n                }, 1000);\n            }\n        });\n    });\n};\n\nfunction checkS3client() {\n    if (!s3client) {\n        s3client = knox.createClient(S3_CONFIG);\n    }\n}\n\nMailingApp.getCSV = function(url, avoidEmails) {\n    checkS3client();\n    var data = '';\n    return new Promise(function(resolve, reject) {\n        s3client.get(url).on('response', function(res) {\n            if (res.statusCode !== 200) {\n                logger.error(res.req.body); // XXX Not sure if this is the error\n                return resolve([]);\n            }\n            res.setEncoding('utf8');\n            res.on('data', function(chunk) {    // Fetching amazon file into variable data\n                data += chunk;\n            });\n            res.on('end', function() {\n                var emails = data.split('\\r\\n');    // Sometimes happen.. (windows)\n                if (emails.length === 1) {          //  Not \\r\\n split\n                    emails = data.split('\\n');\n                }\n                helpers.getEmailsFromDB(_.difference(emails, avoidEmails))\n                        .then(function(emailsOK) {\n                    resolve(emailsOK);\n                }).catch(function(err) {\n                    reject(err);\n                });\n            });\n        }).end();\n    });\n};\n\nMailingApp.getEmails = function(m, avoidEmails) {\n    return new Promise(function(resolve) {\n        if (m.csvLink) {\n            MailingApp.getCSV(m.csvLink, avoidEmails).then(function(users) {\n                resolve(users);\n            }).catch(function (err) {\n                logger.error(err);\n                resolve([]);\n            });\n        } else if (m.segmentName) {\n            segments[m.segmentName].call({}, avoidEmails).then(function(users) {\n                resolve(users);\n            });\n        } else {\n            resolve([]);\n        }\n    });\n};\n\n/**\n * Given info for a mailing, takes the template, fills blocks for each user\n * @param  {Object} m Attributes: templateName, segmentName, subject, campaign, day\n * @return {Promise}  Contains all params necessary to send emails\n */\nMailingApp.processMailing = function(m) {\n    return mailer.templates.get(m.templateId).then(function(template) {\n        debug('Template %s loaded successfully', m.templateName);\n\n        var templateHtml = helpers.getTemplateHtml(template) || '',\n            specs        = {\n                mailing: m,\n                cache  : {},\n                blocks : helpers.getBlocks(templateHtml),\n                index  : 0,\n                params : {\n                    subject   : m.subject,\n                    sub       : {},\n                    categories: [m.segmentName || 'emailsCSV', m.campaign]\n                }\n            },\n            noSend = m.sendedTo.concat(MailingApp.preventDuplicates);\n        if (!templateHtml) {\n            throw 'Active version\\'s Html content is empty!';\n        }\n        templateHtml = templateHtml.replace('<%body%>', '').replace('&lt;%body%&gt;', '');\n        specs.params = _.extend({}, defaultParams, specs.params);\n        specs.params.html = helpers.normalizeVars(templateHtml);\n        return MailingApp.getEmails(m, noSend).then(function(users) {\n            console.log('Mailing: send to', users.length, 'users -',\n                    m.segmentName || 'csv', '-', m.templateName);\n            console.log('Limited to ', (m.limit || 'nothing'),\n                    ', already sended to', m.sendedTo.length);\n            debug('Total segment: %s', users.length);\n\n            var limitedTo = m.limit || users.length;\n            specs.users = _.take(users, limitedTo);\n            return MailingApp.calcChunksAndSend(specs).then(function() {\n                console.log('Finished mailing');\n                var emailsSended = _.pluck(specs.users, 'email');\n                MailingApp.preventDuplicates =\n                    _.uniq(MailingApp.preventDuplicates.concat(emailsSended));\n                return specs.users.length >= users.length ? [] : emailsSended;\n            });\n        });\n    });\n};\n\n\nMailingApp.afterProcess = function(m, callback) {\n    return function(emails) {\n        debug('Emails received: %s', emails.length);\n        if (config.environment === 'production') {\n            if (emails.length === 0) {\n                m.state    = 'success';\n                m.sendedTo = [];\n                if (m.csvLink) {\n                    s3client.deleteFile(m.csvLink, function(err) {\n                        if (err) {\n                            logger.error(err);\n                        }\n                    });\n                }\n            } else {\n                m.state ='sending';\n                m.limit += (m.incLimit || 0);\n                m.sendedTo = m.sendedTo.concat(emails);\n            }\n            var auxDate = new Date(m.date);\n            auxDate.addDays(1);\n            m.lastExec = new Date();\n            m.date = auxDate;\n            m.save(callback);\n        } else {\n            callback();\n        }\n    };\n};\n\nMailingApp.process = function(done) {\n    return function(err, mailings) {\n        if (err) { return done(err); }\n        debug('Found %s mailing%s to send', mailings.length, mailings.length !== 1? 's':'');\n\n        async.eachSeries(mailings,\n            function(m, callback) {\n                debug('Processing mailing', m);\n                debug(' Send at', m.date);\n                MailingApp.processMailing(m)\n                    .then(MailingApp.afterProcess(m, callback))\n                    .catch(function (err) {\n                        debug('Error!', err);\n                        m.state    = 'error';\n                        m.comment  = JSON.stringify(err);\n                        m.lastExec = new Date();\n                        m.save(callback);\n                    });\n            },\n            function(err) {\n                if (err) {\n                    debug('Error ocurred', err);\n                    logger.error(err);\n                    return done(err);\n                }\n                debug('Finished all.');\n                console.log('Done.');\n                done();\n            });\n    };\n};\n\nMailingApp.mailing = function(done) {\n    var date          = new Date(),\n        tomorrow      = helpers.setDate(new Date(), 'hours'),\n        lastExecWeek  = helpers.setDate(new Date(), 'hours'),\n        lastExecMonth = helpers.setDate(new Date(), 'day');\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    Mailing.find({\n        $or: [\n            { state: 'sending', date: { $lte: tomorrow}},\n            { periodic: false, state: 'pending', date: { $lte: tomorrow }},\n            { periodic: true, $or: [\n                { type: 'daily', $or:\n                    [{ lastExec: { $lt: lastExecWeek}},\n                     { lastExec: { $exists: false }},\n                     { lastExec: null }]},\n                { type: 'weekly', 'number': date.getDay(), $or:\n                    [{ lastExec: { $lt: lastExecWeek}},\n                     { lastExec: { $exists: false }},\n                     { lastExec: null }]},\n                { type: 'monthly', 'number': date.getDate(), $or:\n                    [{ lastExec: { $lt: lastExecMonth}},\n                     { lastExec: { $exists: false }},\n                     { lastExec: null }]}\n            ]}\n        ]\n    }, MailingApp.process(done));\n};\n\n/**\n * Looks for mailings to do in the collection Mailings and then sends one after anther.\n * A mailing can be periodic or not, if its not then it sends mails one time only. If its\n * periodic looks if is already executed that period (query) and then processes it.\n * When a mailing is done, it saves the execution date and if its successful.\n */\nmodule.exports = function(agenda) {\n    agenda.define(jobName, function(job, done) {\n        debug('Started job: %s', jobName);\n        console.log('Started job', jobName);\n        MailingApp.mailing(done);\n    });\n};\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"37":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"38":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"39":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"40":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"41":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"42":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"43":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"44":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"45":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"46":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"47":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"48":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"49":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"330":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"466":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"536":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"547":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"611":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"622":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"686":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"702":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1183":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1315":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1355":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1399":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1473":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"1524":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"2544":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"3528":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"3730":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4020":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4085":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4212":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4450":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4533":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4679":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"4938":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5059":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5129":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5164":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5207":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5276":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5352":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5503":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5548":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"5703":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"6915":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"7117":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"7385":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"8059":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"8068":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"8391":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"8392":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"8545":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"8822":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9408":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9515":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9646":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9815":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9816":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9817":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9818":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9819":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9820":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9895":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9896":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9897":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9919":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"9920":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9921":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9922":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9923":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9924":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9925":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9926":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9927":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9928":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9929":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9930":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9931":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9932":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9933":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9934":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9935":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9936":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9937":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9938":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9939":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9940":{"range":{"start":{"row":346,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"9989":{"range":{"start":{"row":103,"column":41},"end":{"row":103,"column":50}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9990":{"range":{"start":{"row":20,"column":4},"end":{"row":20,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9991":{"range":{"start":{"row":21,"column":4},"end":{"row":21,"column":57}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9997":{"range":{"start":{"row":103,"column":41},"end":{"row":103,"column":50}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9998":{"range":{"start":{"row":20,"column":4},"end":{"row":20,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9999":{"range":{"start":{"row":21,"column":4},"end":{"row":21,"column":57}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":209,"column":28},"end":{"row":209,"column":28}},"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2},"15":{"id":"15","maintainHistory":false,"markersById":{},"version":2},"16":{"id":"16","maintainHistory":false,"markersById":{"9985":{"range":{"start":{"row":163,"column":42},"end":{"row":163,"column":74}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2},"24":{"id":"24","maintainHistory":false,"markersById":{},"version":2},"25":{"id":"25","maintainHistory":false,"markersById":{},"version":2},"34":{"id":"34","maintainHistory":false,"markersById":{},"version":2},"36":{"id":"36","maintainHistory":false,"markersById":{},"version":2},"37":{"id":"37","maintainHistory":false,"markersById":{"10000":{"range":{"start":{"row":163,"column":42},"end":{"row":163,"column":74}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2}},"nextMarkerLayerId":38,"history":{"version":3,"nextCheckpointId":2134,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/index.js","digestWhenLastPersisted":"fc2d1873c7a58d1f8e741fa954e3a56df2bf17e5","preferredLineEnding":null,"nextMarkerId":10001,"deserializer":"TextBuffer","version":5},{"id":"87af0bc03e6756f98678b9f1ff9cb75d","text":"'use strict';\n\nvar debug = require('debug')('segments'),\n    _ = require('lodash'),\n    Promise = require('bluebird'),\n    modelsPath = '../model/',\n    funcs = require('./functions.js'),\n    PreUser = require(modelsPath + 'PreUser').model(),\n    User = require(modelsPath + 'User').model(),\n    BulkEvent = require(modelsPath + 'BulkEvent').model();\n\n// Barcelona [0] -  Madrid [1] - Bilbao [2]\nvar postCodes = {\n    all         : /^(?:08|28|48|46)\\d{3}$/,\n    barcelona   : /^08\\d{3}$/,\n    madrid      : /^28\\d{3}$/,\n    sevilla     : /^41\\d{3}$/,\n    valencia    : /^46\\d{3}$/,\n    bilbao      : /^48\\d{3}$/\n},\n    validEmail =  /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\nfunction validateEmail(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n}\n\nfunction users(query, ignoreEmails) {\n    var defaultQuery = {\n            email: {\n                $exists: true,\n                $regex : validEmail,\n                $nin   : ignoreEmails\n            },\n            isUnsubscribed      : false,\n            'register_data.from': { $ne: 'o_web'}\n        },\n        finalQuery = _.extend({}, defaultQuery, query);\n    return new Promise(function(resolve, reject) {\n        User\n            .find(finalQuery,\n                {postcode: 1, email: 1, name: 1})\n            .lean().exec(function(err, users) {\n                if (err) { reject(err); }\n                resolve(users);\n            });\n    });\n}\n\nfunction preUsers(query, ignoreEmails) {\n    var defaultQuery = {\n            idUser: { $exists: false },\n            email : {\n                $exists: true,\n                $regex : validEmail,\n                $nin   : ignoreEmails\n            },\n            isUnsubscribed: false\n        },\n        finalQuery = _.extend({}, defaultQuery, query);\n    return new Promise(function(resolve, reject) {\n        PreUser\n            .find(finalQuery,\n                {postcode: 1, email: 1, name: 1})\n            .lean().exec(function(err, preusers) {\n                if (err) { reject(err); }\n                resolve(preusers);\n            });\n    });\n}\n\nfunction allUsers(query, ignoreEmails) {\n    return new Promise(function(resolve, reject) {\n        var all = [];\n        all.push(users(query, ignoreEmails));\n        all.push(preUsers(query, ignoreEmails));\n        Promise.all(all).then(function(results) {\n            resolve(results[0].concat(results[1]));\n        });\n    });\n}\n\n// Not used: problems with production (using old mongo 2.4 hangs query)\nfunction openEventsAggregate(ignoreEmails) {\n    return BulkEvent.aggregate([{\n        $match: {\n            event: {\n                $in: ['click', 'open']\n            },\n            email: {\n                $exists: true,\n                $nin   : ignoreEmails\n            }\n        }\n    },{\n        $group: {\n            _id: {\n                'event': '$event',\n                'email': '$email'\n            },\n        }\n    }, {\n        $group: {\n            _id: '$_id.email',\n            events: {$push: '$_id.event'}\n        }\n    }, {\n        $match: {\n            'events': {\n                $ne: 'click'\n            }\n        }\n    }]).exec(function(err, events) {\n        if (err) { throw err; }\n        return _.pluck(events, '_id');\n    });\n}\n\nfunction openEvents(ignoreEmails) {\n    return Promise.all([\n        bulkEvents({event: 'click'}, []),\n        bulkEvents({event: 'open'}, ignoreEmails)\n    ]).then(function(events) {\n        var emailsToIgnore = _.pluck(events[0], 'email'),\n            emails = _.pluck(events[1], 'email'),\n            messages = _.difference(_.uniq(emails), emailsToIgnore);\n        return messages;\n    });\n}\n\nfunction bulkEvents(query, ignoreEmails) {\n    var defaultQuery = {\n            email: {$exists: true, $nin: ignoreEmails}\n        },\n        finalQuery = _.extend({}, defaultQuery, query);\n    return new Promise(function(resolve, reject) {\n        BulkEvent.find( finalQuery )\n                .lean().exec(function(err, events) {\n            if (err) { reject(err); }\n            resolve(events);\n        });\n    });\n}\n\n\nfunction testUsers(prevent) {\n    debug('Test segment');\n    var tUsers = [\n                // 'alba@bellahora.com',\n                // 'carlos@bellahora.com',\n                // 'ruiz@bellahora.com',\n                // 'minerva@bellahora.com',\n                // 'sweetsabri@hotmail.com',\n                // 'sabrina.montanari@bellahora.com',\n                // 'helena.velazquez@bellahora.com',\n                // 'helevel@hotmail.com',\n                // 'adriana@bellahora.com',\n                // 'daniel@bellahora.com',\n                // 'jaume.perez@bellahora.com',\n                'bh_carlos.runme@previews.emailonacid.com',\n                'albert.serven@bellahora.com'\n    ];\n    return User.find({\n        email: {\n            $in: _.difference(tUsers, prevent)\n        }\n    }).lean().exec();\n}\n\nvar segments = {\n\n    test: testUsers,\n\n    byZone: function(alreadySent) {\n        debug('Searching users by zone');\n        return users({\n            postcode: { $regex: postCodes.all}\n        }, alreadySent);\n    },\n    appUsers: function(alreadySent) {\n        debug('Searching users with the app installed');\n        return users({\n            postcode: { $regex: postCodes.all },\n            $or: [\n                { pushandroid: {$exists: true,  $not: {$size: 0 }}},\n                { pushios: {$exists: true, $not: {$size:0 }}}\n            ]\n        }, alreadySent);\n    },\n    notAppUsers: function(alreadySent) {\n        return users({\n            postcode: { $regex: postCodes.all },\n            $and: [\n                { $or: [\n                    { pushandroid: { $exists: false }},\n                    { pushandroid: { $size: 0 }}\n                ]},\n                { $or: [\n                    { pushios: { $exists: false }},\n                    { pushios: { $size: 0 }}\n                ]}\n            ]\n        }, alreadySent);\n    },\n    allWoman: function(alreadySent) {\n        debug('Searching all bellahora female (and not male) users');\n        return users({\n            postcode: { $regex: postCodes.all},\n            gender: {$ne: 'male'}\n        }, alreadySent);\n    },\n    allMan: function(alreadySent) {\n        debug('Searching all bellahora man users');\n        return users({\n            postcode: { $regex: postCodes.all},\n            gender: 'male'\n        }, alreadySent);\n    },\n\n    bellahoraAndOfferumBuyers: function(alreadySent) {\n        debug('Searching bellahora users and offerum woman/genderless buyers');\n        return new Promise(function(resolve, reject) {\n            var promises = [];\n            promises.push(users({\n                postcode: { $regex: postCodes.all}\n            }, alreadySent));\n            promises.push(preUsers({\n                origin: 'offerum-coreg',\n                gender: {$ne: 'male'},\n                origin_buyer: true,\n                postcode: { $regex: postCodes.all }\n            }, alreadySent));\n            Promise.all(promises).then(function(results) {\n                resolve(results[0].concat(results[1]));\n            });\n        });\n    },\n\n    bellahoraNewUsers30NoEvents: function(alreadySent) {\n        return new Promise(function(resolve, reject) {\n            var dat = new Date(),\n                _30days,\n                query;\n            dat.setDate(dat.getDate() - 30);\n            _30days = funcs.objectIdWithTimestamp(dat);\n            query = {\n                _id: { $gte: _30days},\n                postcode: { $regex: postCodes.all}\n            };\n            bulkEvents({event: { $in: ['click', 'open']}}, []).then(function(events) {\n                var emailsToIgnore = _.uniq(_.pluck(events, 'email'));\n                alreadySent = alreadySent.concat(emailsToIgnore);\n                users(query, alreadySent).then(function(results) {\n                    resolve(results);\n                });\n            });\n        });\n    }\n};\n\nvar regions = {\n    'All': postCodes.all,\n    'Bcn': postCodes.barcelona,\n    'Blb': postCodes.bilbao,\n    'Mad': postCodes.madrid,\n    'Sev': postCodes.sevilla,\n    'Val': postCodes.valencia\n};\n\n_.forOwn(regions, function(postcode, name) {\n    segments['opensBellahora' + name] = function(alreadySent) {\n        return openEvents(alreadySent).then(function(messages) {\n            var queryUser = {\n                    postcode: {$regex: postcode },\n                    email   : {$in   : messages},\n                };\n            return users(queryUser, []).then(function(result) {\n                return result;\n            });\n        });\n    };\n});\n\n_.forOwn({\n    'Offerum'  : 'offerum-coreg',\n    'Groupalia': 'groupalia-coreg'\n}, function(value, key) {\n    _.forOwn(regions, function(postcode, name) {\n        segments['opens' + key + name] = function(alreadySent) {\n            return openEvents(alreadySent).then(function(emails) {\n                var queryUser = {\n                        postcode: {$regex: postcode },\n                        email   : {$in   : emails},\n                        origin  : value\n                    };\n                return preUsers(queryUser, []).then(function(result) {\n                    return result;\n                });\n            });\n        };\n    });\n});\n\n_.forOwn({\n    'clicksBh'          : null,\n    'clicksBhMan'       : 'male',\n    'clicksBhWoman'     : 'female',\n    'clicksBhGenderless': {$nin: ['male', 'female']}\n}, function(value, key) {\n    _.forOwn(regions, function(postcode, name) {\n        segments[key + name] = function(alreadySent) {\n            return bulkEvents({event: 'click'}, []).then(function(events) {\n                var emails = _.uniq(_.pluck(events, 'email')),\n                queryUser = {\n                    postcode: {$regex: postcode },\n                    email: {$in: emails},\n                };\n                if (value) { queryUser.gender = value; }\n                return users(queryUser, alreadySent).then(function(results) {\n                    return results;\n                });\n            });\n        };\n    });\n});\n\n\n// Click segments oferum and groupalia\n_.forOwn({\n    'Offerum'  : 'offerum-coreg',\n    'Groupalia': 'groupalia-coreg'\n}, function(origin, from) {\n    _.forOwn({\n        'All'       : null,\n        'Man'       : 'male',\n        'Woman'     : 'female',\n        'Genderless': {$nin: ['male', 'female']}\n    }, function(value, gender) {\n        _.forOwn(regions, function(postcode, region) {\n            segments['clicks' + from + gender + region] = function(alreadySent) {\n                return bulkEvents({event: 'click'}, []).then(function (events) {\n                    var emails = _.uniq(_.pluck(events, 'email')),\n                    queryUser = {\n                        postcode: {$regex: postcode },\n                        email   : {$in   : emails},\n                        origin  : origin\n                    };\n                    if (value) { queryUser.gender = value; }\n                    return preUsers(queryUser, alreadySent).then(function(results) {\n                        return results;\n                    });\n                });\n            };\n        });\n    });\n});\n\n// object days with from and to\nfunction opensWithDaysBh(obj) {\n    var activity = {},\n        genders = {},\n        dateGte = new Date(),\n        dateLt = new Date(),\n        query = {\n            event: 'open',\n        };\n    if (obj.from) {\n        dateGte.setDate(dateGte.getDate() - obj.from);\n        activity.$gte = dateGte;\n    }\n    if (obj.to) {\n        dateLt.setDate(dateLt.getDate() - obj.to);\n        activity.$lt = dateLt;\n    }\n    if (!_.isEmpty(activity)) { query.when = activity; }\n    genders[obj.name] = null;\n    genders[obj.name + 'Man'] = 'male';\n    genders[obj.name + 'Woman'] = 'female';\n    genders[obj.name + 'Genderless'] = { $nin: ['male', 'female']};\n    _.forOwn(genders, function(value, key) {\n        segments[key] = function(alreadySent) {\n            return new Promise(function(resolve, reject) {\n                var bulks = [];\n                bulks.push(bulkEvents({event: 'click'}, []));\n                bulks.push(segments.bellahoraBuyer([]));\n                bulks.push(bulkEvents(query, alreadySent));\n                Promise.all(bulks).then(function(events) {\n                    var promises = [],\n                        emailsToIgnore = _.pluck(events[0].concat(events[1]), 'email'),\n                        emails = _.pluck(events[2], 'email'),\n                        messages = _.difference(_.uniq(emails), emailsToIgnore),\n                        queryUser = {\n                            postcode: {$regex: postCodes.all },\n                            email: {$in: messages},\n                        };\n                    if (value) { queryUser.gender = value; }\n                    users(queryUser, []).then(function(results) {\n                        resolve(results);\n                    });\n                });\n            });\n        };\n    });\n}\n\n\n_.each([\n    { name: 'opensBellahora0010',   from: 10 ,      },\n    { name: 'opensBellahora1020',   from: 20, to: 10},\n    { name: 'opensBellahora2030',   from: 30, to: 20},\n    { name: 'opensBellahora30',               to: 30},\n], function(activitySegment) {\n    opensWithDaysBh(activitySegment);\n});\n\n// object days with from and to\nfunction opensWithDays(obj) {\n    var activity = {},\n        genders = {},\n        dateGte = new Date(),\n        dateLt = new Date(),\n        query = {\n            event: 'open',\n        };\n    if (obj.from) {\n        dateGte.setDate(dateGte.getDate() - obj.from);\n        activity.$gte = dateGte;\n    }\n    if (obj.to) {\n        dateLt.setDate(dateLt.getDate() - obj.to);\n        activity.$lt = dateLt;\n    }\n    if (!_.isEmpty(activity)) { query.when = activity; }\n    genders[obj.name] = null;\n    genders[obj.name + 'Man'] = 'male';\n    genders[obj.name + 'Woman'] = 'female';\n    genders[obj.name + 'Genderless'] = { $nin: ['male', 'female']};\n    _.forOwn(genders, function(value, key) {\n        segments[key] = function(alreadySent) {\n            return new Promise(function(resolve, reject) {\n                var bulks = [];\n                bulks.push(bulkEvents({event: 'click'}, []));\n                bulks.push(segments.bellahoraBuyer([]));\n                bulks.push(bulkEvents(query, alreadySent));\n                Promise.all(bulks).then(function(events) {\n                    var promises = [],\n                        emailsToIgnore = _.pluck(events[0].concat(events[1]), 'email'),\n                        emails = _.pluck(events[2], 'email'),\n                        messages = _.difference(_.uniq(emails), emailsToIgnore),\n                        queryUser = {\n                            postcode: {$regex: postCodes.all },\n                            email: {$in: messages},\n                            origin: obj.origin\n                        };\n                    if (value) { queryUser.gender = value; }\n                    preUsers(queryUser, []).then(function(result) {\n                        resolve(result);\n                    });\n                });\n            });\n        };\n    });\n}\n\n_.each([\n    { name: 'opensOfferum0010',   from: 10 ,        origin: 'offerum-coreg'},\n    { name: 'opensOfferum1020',   from: 20, to: 10, origin: 'offerum-coreg'},\n    { name: 'opensOfferum2030',   from: 30, to: 20, origin: 'offerum-coreg'},\n    { name: 'opensOfferum30',               to: 30, origin: 'offerum-coreg'},\n    { name: 'opensGroupalia0010', from: 10,         origin: 'groupalia-coreg'},\n    { name: 'opensGroupalia1020', from: 20, to: 10, origin: 'groupalia-coreg'},\n    { name: 'opensGroupalia2030', from: 30, to: 20, origin: 'groupalia-coreg'},\n    { name: 'opensGroupalia30',             to: 30, origin: 'groupalia-coreg'}\n], function(activitySegment) {\n    opensWithDays(activitySegment);\n});\n\n\n// obj contains from, to, name, origin\nfunction recentActivityPreusers(obj) {\n    var activity = {},\n        genders = {},\n        dateGte = new Date(),\n        dateLt = new Date(),\n        query = {\n            origin: obj.origin,\n            postcode: { $regex: postCodes.all},\n        };\n// 2015-10-01 date when we received groupalia db\n// 2015-08-26 date when we received offerum db\n    switch (obj.origin) {\n        case 'offerum-coreg':\n            dateGte = new Date('2015-08-26');\n            dateLt = new Date('2015-08-26');\n            break;\n        case 'groupalia-coreg':\n            dateGte = new Date('2015-10-01');\n            dateLt = new Date('2015-10-01');\n            break;\n        default:\n    }\n    if (obj.from) {\n        dateGte.setDate(dateGte.getDate() - obj.from);\n        activity.$gte = dateGte;\n    }\n    if (obj.to) {\n        dateLt.setDate(dateLt.getDate() - obj.to);\n        activity.$lt = dateLt;\n    }\n    if (!_.isEmpty(activity)) { query.origin_last_activity = activity; }\n    if (obj.buyer) { query.origin_buyer = obj.buyer; }\n    genders[obj.name] = null;\n    genders[obj.name + 'Man'] = 'male';\n    genders[obj.name + 'Woman'] = 'female';\n    genders[obj.name + 'Genderless'] = { $nin: ['male', 'female']};\n\n    _.forOwn(genders, function(value, key) {\n        segments[key] = function(alreadySent) {\n            if (value) {\n                query.gender = value;\n            }\n            return preUsers(query, alreadySent);\n        };\n    });\n    delete query.gender;\n    _.forOwn(genders, function(value, key) {\n        segments[key + 'NoEvents'] = function(already) {\n            return new Promise(function(resolve, reject) {\n                var bulks = [];\n                if (value) {\n                    query.gender = value;\n                }\n                bulks.push(bulkEvents({event: { $in: ['click', 'open']}}, []));\n                bulks.push(segments.bellahoraBuyer([]));\n                Promise.all(bulks).then(function(events) {\n                    var emailsToIgnore = _.uniq(_.pluck(events[0].concat(events[1]), 'email'));\n                    already = already.concat(emailsToIgnore);\n                    preUsers(query, already).then(function(results) {\n                        resolve(results);\n                    });\n                });\n            });\n        };\n    });\n}\n\n_.forOwn({\n    'bellahoraBuyer': null,\n    'bellahoraBuyerMan': 'male',\n    'bellahoraBuyerWoman': 'female',\n    'bellahoraBuyerGenderless': { $nin: ['male', 'female']}\n}, function(value, key) {\n    segments[key] = function(alreadySent) {\n        var query = {\n            last_work: { $exists: true},\n            postcode: { $regex: postCodes.all},\n        };\n        if (value) { query.gender = value; }\n        return users(query, alreadySent);\n    };\n    segments[key + 'NoEvents'] = function(already) {\n        return new Promise(function(resolve, reject) {\n            var query = {\n                last_work: { $exists: true},\n                postcode: { $regex: postCodes.all},\n            };\n            if (value) {\n                query.gender = value;\n            }\n            bulkEvents({event: { $in: ['click', 'open']}}, []).then(function(events) {\n                var emailsToIgnore = _.uniq(_.pluck(events, 'email'));\n                already = already.concat(emailsToIgnore);\n                users(query, already).then(function(results) {\n                    resolve(results);\n                });\n            });\n        });\n    };\n});\n\n_.forOwn({\n    'preOfferumBuyer': null,\n    'preOfferumBuyerMan': 'male',\n    'preOfferumBuyerWoman': 'female',\n    'preOfferumBuyerGenderless': { $nin: ['male', 'female']}\n}, function(value, key) {\n    segments[key] = function(alreadySent) {\n        var query = {\n            origin: 'offerum-coreg',\n            origin_buyer: true,\n            postcode: { $regex: postCodes.all},\n        };\n        if (value) { query.gender = value; }\n        return preUsers(query, alreadySent);\n    };\n    segments[key + 'NoEvents'] = function(already) {\n        return new Promise(function(resolve, reject) {\n            var query = {\n                origin: 'offerum-coreg',\n                origin_buyer: true,\n                postcode: { $regex: postCodes.all},\n            };\n            if (value) {\n                query.gender = value;\n            }\n            bulkEvents({event: { $in: ['click', 'open']}}, []).then(function(events) {\n                var emailsToIgnore = _.uniq(_.pluck(events, 'email'));\n                already = already.concat(emailsToIgnore);\n                preUsers(query, already).then(function(results) {\n                    resolve(results);\n                });\n            });\n        });\n    };\n});\n_.forOwn({\n    'preGroupaliaBuyer': null,\n    'preGroupaliaBuyerMan': 'male',\n    'preGroupaliaBuyerWoman': 'female',\n    'preGroupaliaBuyerGenderless': { $nin: ['male', 'female']}\n}, function(value, key) {\n    segments[key] = function(alreadySent) {\n        var query = {\n            origin: 'groupalia-coreg',\n            origin_buyer: true,\n            postcode: { $regex: postCodes.all},\n        };\n        if (value) { query.gender = value; }\n        return preUsers(query, alreadySent);\n    };\n    segments[key + 'NoEvents'] = function(already) {\n        return new Promise(function(resolve, reject) {\n            var query = {\n                origin: 'groupalia-coreg',\n                origin_buyer: true,\n                postcode: { $regex: postCodes.all},\n            };\n            if (value) {\n                query.gender = value;\n            }\n            bulkEvents({event: { $in: ['click', 'open']}}, []).then(function(events) {\n                var emailsToIgnore = _.uniq(_.pluck(events, 'email'));\n                already = already.concat(emailsToIgnore);\n                preUsers(query, already).then(function(results) {\n                    resolve(results);\n                });\n            });\n        });\n    };\n});\n\n_.each([\n    { name: 'recentActivityOfferum0030',     from: 30,           origin: 'offerum-coreg'},\n    { name: 'recentActivityOfferum3060',     from: 60,  to: 30,  origin: 'offerum-coreg'},\n    { name: 'recentActivityOfferum6090',     from: 90,  to: 60,  origin: 'offerum-coreg'},\n    { name: 'recentActivityOfferum90120',    from: 120, to: 90,  origin: 'offerum-coreg'},\n    { name: 'recentActivityOfferum120180',   from: 180, to: 120, origin: 'offerum-coreg'},\n    { name: 'recentActivityOfferum180',                 to: 180, origin: 'offerum-coreg'},\n    { name: 'recentActivityGroupalia0030',   from: 30,           origin: 'groupalia-coreg', buyer: false},\n    { name: 'recentActivityGroupalia3060',   from: 60,  to: 30,  origin: 'groupalia-coreg', buyer: false},\n    { name: 'recentActivityGroupalia6090',   from: 90,  to: 60,  origin: 'groupalia-coreg', buyer: false},\n    { name: 'recentActivityGroupalia90120',  from: 120, to: 90,  origin: 'groupalia-coreg', buyer: false},\n    { name: 'recentActivityGroupalia120180', from: 180, to: 120, origin: 'groupalia-coreg', buyer: false},\n    { name: 'recentActivityGroupalia180',               to: 180, origin: 'groupalia-coreg', buyer: false}\n], function(activitySegment) {\n    recentActivityPreusers(activitySegment);\n});\n\nfunction genDate(date, days) {\n    if (!days) { days = 0; }\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate() - days);\n}\n\nfunction recentActivity(queriesArray) {\n    var newQueries = [];\n    _.each(queriesArray, function(q) {\n        newQueries.push(q);\n        var auxq,\n            i,\n            days = [30, 60, 90, 120, 180],\n            date = new Date();\n        // 2015-10-01 date when we received groupalia db\n        // 2015-08-26 date when we received offerum db\n        switch (q.query.origin) {\n            case 'offerum-coreg':\n                date = new Date('2015-08-26');\n                break;\n            case 'groupalia-coreg':\n                date = new Date('2015-10-01');\n                break;\n            default:\n        }\n// TODO: func to wrap new object\n        auxq = _.extend({}, q);\n        auxq.name += 'Activity30';\n        auxq.query = _.extend({}, q.query, { activity: { $gte: genDate(date, 30)}});\n        newQueries.push(auxq);\n\n        for (i = 1; i < days.length; i += 1) {\n            auxq = _.extend({}, q);\n            auxq.name += 'Activity' + String(days[i - 1]) + String(days[i]);\n            auxq.query = _.extend({}, q.query, {\n                activity: {\n                    $gte: genDate(date, days[i]),\n                    $lt: genDate(date, days[i - 1])\n                }\n            });\n            newQueries.push(auxq);\n        }\n\n        auxq = _.extend({}, q);\n        auxq.name += 'Activity180';\n        auxq.query = _.extend({}, q.query, { activity: { $lt: genDate(date, 180)}});\n        newQueries.push(auxq);\n\n    });\n    return newQueries;\n}\n\nfunction gender(queriesArray) {\n    var newQueries = [];\n    _.each(queriesArray, function(q) {\n        newQueries.push(q);\n        var auxq;\n        _.forOwn({\n            'Man': 'male',\n            'Woman': 'female',\n            'Genderless': { $nin: ['male', 'female']}\n        }, function(value, key) {\n            auxq = _.extend({}, q);\n            auxq.name += key;\n            auxq.query = _.extend({}, q.query, {\n                gender: value\n            });\n            newQueries.push(auxq);\n        });\n    });\n    return newQueries;\n}\n\nfunction genSegments(queries) {\n    _.each(queries, function(q) {\n        segments[q.name] = function(alreadySent) {\n            return q.model(q.query, alreadySent);\n        };\n        segments[q.name + 'NoEvents'] = function(already) {\n            return new Promise(function(resolve, reject) {\n                bulkEvents({event: { $in: ['click', 'open']}}, []).then(function(events) {\n                    var emailsToIgnore = _.uniq(_.pluck(events, 'email'));\n                    already = already.concat(emailsToIgnore);\n                    q.model(q.query, already).then(function(results) {\n                        resolve(results);\n                    });\n                });\n            });\n        };\n    });\n}\n\nvar bhqueries = [\n    {\n        name: 'barcelonaBellahora',\n        model: users,\n        query: { postcode: postCodes.barcelona }\n    },\n    {\n        name: 'madridBellahora',\n        model: users,\n        query: { postcode: postCodes.madrid }\n    },\n    {\n        name: 'bilbaoBellahora',\n        model: users,\n        query: { postcode: postCodes.bilbao }\n    },\n    {\n        name: 'valenciaBellahora',\n        model: users,\n        query: { postcode: postCodes.valencia }\n    }\n];\nvar queries = [\n    {\n        name: 'sevillaBellahora',\n        model: users,\n        query: { postcode: postCodes.sevilla}\n    },\n    {\n        name: 'sevillaOfferum',\n        model: preUsers,\n        query: {\n            postcode: postCodes.sevilla,\n            origin: 'offerum-coreg'\n        }\n    },\n    {\n        name: 'sevillaGroupalia',\n        model: preUsers,\n        query: {\n            postcode: postCodes.sevilla,\n            origin: 'groupalia-coreg'\n        }\n    }\n];\nvar genBh = gender(bhqueries);\nvar generatedQueries = gender(queries.slice(0,1)).concat(gender(recentActivity(queries.slice(1,3))));\n\ngenSegments(genBh);\ngenSegments(generatedQueries);\n\n\nmodule.exports = segments;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"23":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"24":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"25":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"26":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"27":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"28":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"29":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"30":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"31":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"32":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"33":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"34":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"35":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"36":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"37":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"38":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"39":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"40":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"41":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"42":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"43":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"44":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"45":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"46":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"47":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"48":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"49":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"50":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"51":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"52":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"53":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"54":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"55":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"56":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"57":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"58":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"59":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"60":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"61":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"62":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"63":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"64":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"65":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"66":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"67":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"68":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"69":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"70":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"71":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"72":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"inside"},"79":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"80":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"91":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"92":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"93":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"94":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"176":{"range":{"start":{"row":20,"column":102},"end":{"row":20,"column":103}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"177":{"range":{"start":{"row":72,"column":41},"end":{"row":72,"column":50}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"178":{"range":{"start":{"row":130,"column":9},"end":{"row":130,"column":42}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"179":{"range":{"start":{"row":229,"column":0},"end":{"row":229,"column":35}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"180":{"range":{"start":{"row":221,"column":45},"end":{"row":221,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"181":{"range":{"start":{"row":239,"column":45},"end":{"row":239,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"182":{"range":{"start":{"row":387,"column":24},"end":{"row":387,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"183":{"range":{"start":{"row":381,"column":49},"end":{"row":381,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"184":{"range":{"start":{"row":445,"column":24},"end":{"row":445,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"185":{"range":{"start":{"row":439,"column":49},"end":{"row":439,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"186":{"range":{"start":{"row":509,"column":0},"end":{"row":509,"column":72}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"187":{"range":{"start":{"row":510,"column":0},"end":{"row":510,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"188":{"range":{"start":{"row":527,"column":49},"end":{"row":527,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"189":{"range":{"start":{"row":554,"column":0},"end":{"row":554,"column":40}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"190":{"range":{"start":{"row":563,"column":0},"end":{"row":563,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"191":{"range":{"start":{"row":561,"column":45},"end":{"row":561,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"192":{"range":{"start":{"row":589,"column":0},"end":{"row":589,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"193":{"range":{"start":{"row":599,"column":0},"end":{"row":599,"column":35}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"194":{"range":{"start":{"row":596,"column":45},"end":{"row":596,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"195":{"range":{"start":{"row":624,"column":0},"end":{"row":624,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"196":{"range":{"start":{"row":634,"column":0},"end":{"row":634,"column":35}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"197":{"range":{"start":{"row":631,"column":45},"end":{"row":631,"column":54}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"198":{"range":{"start":{"row":658,"column":105},"end":{"row":658,"column":106}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"199":{"range":{"start":{"row":659,"column":105},"end":{"row":659,"column":106}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"200":{"range":{"start":{"row":660,"column":105},"end":{"row":660,"column":106}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"201":{"range":{"start":{"row":661,"column":105},"end":{"row":661,"column":106}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"202":{"range":{"start":{"row":662,"column":105},"end":{"row":662,"column":106}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"203":{"range":{"start":{"row":663,"column":104},"end":{"row":663,"column":105}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"204":{"range":{"start":{"row":746,"column":49},"end":{"row":746,"column":58}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"205":{"range":{"start":{"row":805,"column":100},"end":{"row":805,"column":101}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"206":{"range":{"start":{"row":22,"column":9},"end":{"row":22,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"207":{"range":{"start":{"row":71,"column":9},"end":{"row":71,"column":40}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"208":{"range":{"start":{"row":83,"column":9},"end":{"row":83,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":63,"column":0},"end":{"row":63,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{"7":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"8":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"9":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"10":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"11":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"12":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"13":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"14":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"15":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"16":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"17":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"18":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"}},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{"123":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"124":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"125":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"126":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"127":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"128":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"129":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"130":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"131":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"132":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"133":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"},"134":{"range":{"start":{"row":812,"column":0},"end":{"row":812,"column":0}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":false,"invalidate":"touch"}},"version":2},"14":{"id":"14","maintainHistory":false,"markersById":{},"version":2},"15":{"id":"15","maintainHistory":false,"markersById":{"166":{"range":{"start":{"row":125,"column":25},"end":{"row":125,"column":67}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"167":{"range":{"start":{"row":164,"column":19},"end":{"row":164,"column":46}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"168":{"range":{"start":{"row":390,"column":37},"end":{"row":390,"column":79}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"169":{"range":{"start":{"row":448,"column":37},"end":{"row":448,"column":79}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2},"23":{"id":"23","maintainHistory":false,"markersById":{},"version":2},"24":{"id":"24","maintainHistory":false,"markersById":{},"version":2},"34":{"id":"34","maintainHistory":false,"markersById":{},"version":2},"35":{"id":"35","maintainHistory":false,"markersById":{},"version":2},"36":{"id":"36","maintainHistory":false,"markersById":{"209":{"range":{"start":{"row":125,"column":25},"end":{"row":125,"column":67}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"210":{"range":{"start":{"row":164,"column":19},"end":{"row":164,"column":46}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"211":{"range":{"start":{"row":390,"column":37},"end":{"row":390,"column":79}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"212":{"range":{"start":{"row":448,"column":37},"end":{"row":448,"column":79}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2}},"nextMarkerLayerId":37,"history":{"version":3,"nextCheckpointId":4,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/segments.js","digestWhenLastPersisted":"ac489f59a05ed14a0faca8f5931148a456362e37","preferredLineEnding":null,"nextMarkerId":213,"deserializer":"TextBuffer","version":5},{"id":"6857a40d2a420a7c4ca694b4a110cc2e","text":"'use strict';\n\nvar _         = require('lodash'),\n    debug     = require('debug')('mailing:helpers'),\n    Promise   = require('bluebird'),\n    fs        = require('fs'),\n    path      = require('path'),\n    minify  = require('html-minifier').minify,\n    Crypt     = require('../../common/utils/crypt.js'),\n\n    modelPath = '../../common/model/',\n    Treatment = require(modelPath + 'Treatment').model().Model,\n    User      = require(modelPath + 'User').model(),\n    PreUser   = require(modelPath + 'PreUser').model(),\n    Web       = require(modelPath + 'Web').model(),\n\n    crypt     = new Crypt('e7w95d4f9wd52g'),\n    cities = {\n        '08': 'barcelona',\n        '28': 'madrid',\n        '48': 'bilbao',\n        '46': 'valencia',\n        '41': 'sevilla'\n    },\n    htmlOptions = {\n        removeComments       : true,\n        collapseWhitespace   : true,\n        // removeEmptyAttributes: true,\n        minifyCSS            : true\n    };\n\n/**\n * Sets the date to zero given a level  (Ex: date = 2015-08-22 10:44:23, level = 'hours'\n * @param {Date} date    Date to set          result = 2015-08-22 00:00:00 )\n * @param {String} level String with the level --> month, day, hours, minutes, seconds\n */\nfunction setDate(date, level) {\n    switch (level) {\n        case 'month':\n            date.setMonth(0);\n        case 'day':\n            date.setDate(1);\n        case 'hours':\n            date.setHours(0);\n        case 'minutes':\n            date.setMinutes(0);\n        case 'seconds':\n            date.setSeconds(0);\n            break;\n        default:\n    }\n    return date;\n}\n\nfunction getEmailsFromDB(emails) {\n    var regexMail = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i,\n        baseQuery = {\n            email: {\n                $regex : regexMail,\n                $exists: true,\n                $in    : emails\n            },\n            isUnsubscribed: false,\n        },\n        getParams = {postcode: 1, email: 1, name: 1};\n    return Promise.all([\n        User.find(_.extend({}, baseQuery, {\n                'register_data.from': { $ne: 'o_web'}\n            }), getParams).exec(),\n        PreUser.find(_.extend({}, baseQuery, {\n                idUser: {$exists: false},\n            }), getParams).exec()\n    ]).then(function(result) {\n        return _.uniq(result[0].concat(result[1]), 'email');\n    });\n}\n\n/**\n * Gets all existing images from centers\n * @param  {Array} bhaccounts Array of centers ids\n * @return {Promise}          Object: { idBHAccount: imgPath }\n */\nfunction getCenterImages(bhaccounts) {\n    debug('Searching center images');\n    return new Promise(function(resolve, reject) {\n        var imgs = {};\n        Web.findWithoutBHAccount({\n            _idBHAccount: { $in: bhaccounts}\n        }).lean().exec(function(err, webs) {\n            if (err) { reject(err); }\n            _.each(webs, function(web) {\n                web.configs.forEach(function(config) {\n                    config.kv.forEach(function(item) {\n                        if (item.id === 'main-gallery') {\n                            imgs[web._idBHAccount] = item.value[0];\n                        }\n                    });\n                });\n            });\n            resolve(imgs);\n        });\n    });\n}\n\n/**\n * Gets all treatment prices from centers\n * @param  {Array} bhaccounts Array of centers ids\n * @return {Promise}          Object: { idBHAccount: [prices] }\n */\nfunction getCenterPrices(bhaccounts) {\n    debug('Searching treatment prices for centers');\n    return new Promise(function(resolve, reject) {\n        var prices = {};\n        Treatment\n            .find({\n                _idBHAccount: { $in: bhaccounts},\n                price: { $gt: 4, $lt: 24}\n            })\n            .sort({price: 1})\n            .lean().exec(function(err, treatments) {\n                if (err) { reject(err); }\n                _.each(treatments, function(treatment) {\n                    var price = Math.ceil(treatment.price),\n                        id = treatment._idBHAccount;\n                    if (prices[id]) {\n                        prices[id].push(price);\n                    } else {\n                        prices[id] = [price];\n                    }\n                });\n                resolve(prices);\n            });\n    });\n}\n\nfunction addAnalytics(tracking) {\n    var d = new Date(),\n        dayMonthYear = ['', d.getDate(), (d.getMonth() + 1),\n                d.getFullYear()].join('_'),\n        source   = 'utm_source=email' + dayMonthYear,\n        campaign = 'utm_campaign=' + tracking;\n    return source + '&' + campaign;\n}\n\nfunction createUrl(path, campana, place) {\n    var d = new Date(),\n        dayMonthYear = ['', d.getDate(), (d.getMonth() + 1), d.getFullYear()].join('_'),\n        https    = 'https://bellahora.com/es/',\n        tracking = 'tracking=' + campana,\n        source   = 'utm_source=email' + dayMonthYear,\n        medium   = 'utm_medium=' + path,\n        campaign = 'utm_campaign=' + campana;\n    if (place) {\n        https = https + 'place/';\n    }\n    return https + path + '?' + tracking + ['', source, medium, campaign].join('&');\n}\n\nfunction createUniqueVars(users, from, campaign) {\n    return _.reduce(users, function(result, user) {\n        var email = user.email;\n        result[email] = {\n            '*|SENDER|*'  : from,\n            '*|TRACKING|*': campaign + '&' + addAnalytics(campaign),\n            '*|UNSUB|*'   : 'https://bellahora.com/es/user/unsubscribe/' +\n                    crypt.encrypt(email)\n        };\n        if (user.postcode) {\n            result[email]['*|CITY|*'] = cities[user.postcode.slice(0,2)];\n        }\n        if (user.name && user.name.trim().length) {\n            result[email]['*|NAME|*'] = user.name.trim();\n        }\n        return result;\n    }, {});\n}\n\nfunction mergeVars(vars, blocks, emails) {\n    debug('Merging vars from uniqueVars and blocks');\n    var uniqueVars = [\n            '*|CITY|*',\n            '*|NAME|*',\n            '*|SENDER|*',\n            '*|TRACKING|*',\n            '*|UNSUB|*'\n        ],\n        sub = {};\n    _.each(uniqueVars, function(v) {\n        sub[v] = [];\n    });\n    _.each(blocks, function(block) {\n        sub[block.variable] = [];\n    });\n    _.each(emails, function(email) {\n        _.each(uniqueVars, function(key) {\n            var emailSub = vars[email][key] || '';\n            sub[key].push(emailSub);\n        });\n        _.each(blocks, function(block) {\n            var emailSub = block.emails[email] || '';\n            sub[block.variable].push(emailSub);\n        });\n    });\n    return sub;\n}\n\n// Gets all vars *|VAR|* and removes those that have params *|VAR?param=foo|*\nfunction normalizeVars(code) {\n    return code.replace(/\\*\\|([^?\\|]+)(.*?)\\|\\*/g, '*|$1|*');\n}\n\nfunction parseBlock(block) {\n                // Separate BLOCK from Parameters\n    var groups = block.match(/\\*\\|([^?]+)(.*)\\|\\*/),\n        name,\n        keys,\n        vars;\n    if (groups[2]) {\n        keys = groups[2]\n            .replace('?','')\n            .replace(/&amp;/g,'&')      // If & is an html entity\n            .replace(/=[^\\&]+\\&/g, ',') // Replace p1=val1&p2=val2&p3=val3 ---> p1,p2,p3=val3\n            .replace(/=.*$/,'')         // Last param p1,p2,p3=val3 ---> p1,p2,p3\n            .split(',');\n        vars = groups[2]\n            .replace(/\\?.+?=/, '')      // Replace ?param=value ---> value\n            .replace(/\\&.+?=/g, ',')    // Replace &param=value ---> ,value\n            .split(',');                // Split by commas  [value1, value2, value3]\n\n        name = groups[1].toLowerCase().trim();\n        return {\n            name    : name,\n            path    : path.join(__dirname, 'blocks/' + name + '.js'),\n            settings: _.zipObject(keys, vars)\n        };\n    } else {\n        name = block.replace(/[\\*|\\|]/g,'').toLowerCase();\n        return {\n            path    : path.join(__dirname, 'blocks/' + name + '.js'),\n            name    : name,\n            settings: {}\n        };\n    }\n}\n\n/**\n * Given the template code, searches for blocks and returns its path\n * @param  {String} code Template code\n * @return {Array}       Objects with path and arguments for blocks\n */\nfunction getBlocks(code) {\n    debug('Getting blocks in template');\n    var blocks = [],\n        batch = code.match(/\\*\\|.+?\\|\\*/g);  // Get all *| BLOCK |* in code\n    _.each(batch, function(block) {\n        var b = parseBlock(block);\n        if (fs.existsSync(b.path)) {\n            blocks.push(b);\n        }\n    });\n    debug('Blocks found: ', _.pluck(blocks, 'name'));\n    return blocks;\n}\n\nfunction getTemplateHtml(template) {\n    var v = _.find(template.versions, 'active') || {};\n    return v.html_content; //minify(v.html_content, htmlOptions);\n}\n\n\nvar helpers = {\n    setDate         : setDate,\n    getEmailsFromDB : getEmailsFromDB,\n    getCenterImages : getCenterImages,\n    getCenterPrices : getCenterPrices,\n    addAnalytics    : addAnalytics,\n    createUrl       : createUrl,\n    createUniqueVars: createUniqueVars,\n    normalizeVars   : normalizeVars,\n    getBlocks       : getBlocks,\n    mergeVars       : mergeVars,\n    getTemplateHtml : getTemplateHtml\n};\n\nmodule.exports = helpers;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"5":{"range":{"start":{"row":39,"column":28},"end":{"row":39,"column":29}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"6":{"range":{"start":{"row":41,"column":27},"end":{"row":41,"column":28}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"7":{"range":{"start":{"row":43,"column":28},"end":{"row":43,"column":29}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"8":{"range":{"start":{"row":45,"column":30},"end":{"row":45,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9":{"range":{"start":{"row":55,"column":104},"end":{"row":55,"column":105}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"25":{"range":{"start":{"row":7,"column":4},"end":{"row":7,"column":46}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"26":{"range":{"start":{"row":24,"column":4},"end":{"row":24,"column":19}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"72":{"range":{"start":{"row":27,"column":0},"end":{"row":28,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"73":{"range":{"start":{"row":266,"column":0},"end":{"row":267,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"74":{"range":{"start":{"row":266,"column":0},"end":{"row":266,"column":65}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":269,"column":0},"end":{"row":269,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"8":{"id":"8","maintainHistory":false,"markersById":{},"version":2},"9":{"id":"9","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":10,"history":{"version":3,"nextCheckpointId":17,"undoStack":[{"type":"checkpoint","id":1,"snapshot":{"2":{"1":{"range":[[266,13],[266,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,11],[266,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,11],[266,11]],"newRange":[[266,11],[266,12]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[266,12],[266,12]],"newRange":[[266,12],[266,13]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,13],[266,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,11],[266,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,11],[266,11]],"newRange":[[266,11],[266,12]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[266,12],[266,12]],"newRange":[[266,12],[266,13]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,13],[266,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,13],[266,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,13],[266,13]],"newRange":[[266,13],[266,14]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[266,14],[266,14]],"newRange":[[266,14],[266,15]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[266,15],[266,15]],"newRange":[[266,15],[266,16]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[266,16],[266,16]],"newRange":[[266,16],[266,17]],"oldText":"","newText":"l"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,17],[266,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,17],[266,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,13],[266,17]],"newRange":[[266,13],[266,25]],"oldText":"html","newText":"html_content"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,25],[266,25]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,25],[266,25]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,25],[266,25]],"newRange":[[266,25],[266,26]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,26],[266,26]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[266,26],[266,26]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[266,26],[266,26]],"newRange":[[266,26],[266,27]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[266,27],[266,27]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/helpers.js","digestWhenLastPersisted":"e692ecd99b39b07a78a1162130ee81b26f6a2872","preferredLineEnding":null,"nextMarkerId":77,"deserializer":"TextBuffer","version":5},{"id":"b013f0a8ebb62848759337d3620c8be2","text":"\"use strict\";\n\nvar _ = require('underscore');\nvar amazonSes = require('awssum-amazon-ses');\nvar mimelib = require(\"mimelib\");\nvar fs = require('graceful-fs');\nvar logger = require('./logentries')();\n\nvar Mailer = function(a_originPath) {\n\tvar that = this,\n\taccount = '692548035490',\n\tuser = 'AKIAI452K7PQRA5GSO7A',\n\tpass = 'L9WFbp/rVjKAQJYb+oXHxXqIUbPZxY0TcewbwWcY',\n\toriginPath = a_originPath || '.',\n\tses = new amazonSes.Ses({\n\t\t'accessKeyId'     : user,\n\t\t'secretAccessKey' : pass,\n\t\t'awsAccountId'    : account\n\t}),\n\n\tconfMail = {\n\t\tSource: 'no-responder@bellahora.com'\n\t},\n\n\t_send = function(params) {\n\t\tses.SendEmail(params, function(err, data){\n\t\t\tif(err) {\n\t\t\t\tlogger.error(err);\n\t\t\t\tif(params.error) params.error(err);\n\t\t\t} else {\n\t\t\t\tif(params.success) params.success(data);\n\t\t\t}\n\t\t});\n\t},\n\n\t_sendWithAttachment = function( params ) {\n\t\t//Read file\n\t\tvar f = fs.readFileSync( \"./\" + params.file );\n\t\t//Delete file\n\t\tfs.unlink('./' + params.file , function (err) { if (err) throw err; });\n\n\t\tvar message = '';\n\t\tmessage     += \"To: \"+params.ToAddresses[0]+(params.ToAddresses[1]?','+params.ToAddresses[1]:'')+\"\\n\";\n\t\tmessage     += \"From: \"+params.Source+\"\\n\";\n\t\tmessage     += \"Subject: \"+params.Subject+\"\\n\";\n\t\tmessage     += 'Content-Type: multipart/mixed; boundary=\"521f6a56_617c843e_14c\"\\n';\n\t\tmessage     += \"Content-Transfer-Encoding: quoted-printable\\n\";\n\t\tmessage     += \"MIME-Version: 1.0\\n\";\n\t\tmessage     += \"\\n--521f6a56_617c843e_14c\\n\";\n\t\tmessage     += 'Content-Type: text/html; charset=\"utf-8\"\\n';\n\t\tmessage     += \"Content-Transfer-Encoding: quoted-printable\\n\";\n\t\tmessage     += mimelib.encodeQuotedPrintable( params.Html );\n\t\tmessage     += \"\\n--521f6a56_617c843e_14c\\n\";\n\t\tmessage     += 'Content-Type: application/pdf\\n';\n\t\tmessage     += \"Content-Transfer-Encoding: base64\\n\";\n\t\tmessage     += 'Content-Disposition: attachment; filename=\"'+params.file+'\"\\n\\n';\n\t\tmessage     += f.toString(\"base64\");\n\t\tmessage     += \"\\n\\n--521f6a56_617c843e_14c\\n\";\n\n\t\tses.SendRawEmail({ RawMessage : message }, function(err, data) {\n\n\t\t\tif(err) {\n\t\t\t\tlogger.error(err);\n\t\t\t\tif(params.error) params.error(err);\n\t\t\t} else {\n\t\t\t\tif(params.success) params.success(data);\n\t\t\t}\n\t\t});\n\t}\n\t;\n\n\tthat.send = function( a_params ) {\n\t\tvar params = a_params.Source ? params = a_params : _.extend({}, confMail, a_params);\n\n\t\tparams.ToAddresses = (typeof params.to === 'string' ? [params.to] : params.to);\n\t\tparams.Subject = params.subject;\n\t\tparams.Html = params.body;\n\n\t\tif( params.file ) {\n\t\t\t_sendWithAttachment( params );\n\t\t} else {\n\t\t\t_send( params );\n\t\t}\n\t};\n\n\treturn that;\n}\n\nmodule.exports = Mailer;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"3":{"range":{"start":{"row":0,"column":12},"end":{"row":0,"column":13}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"4":{"range":{"start":{"row":4,"column":31},"end":{"row":4,"column":33}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"5":{"range":{"start":{"row":8,"column":0},"end":{"row":8,"column":37}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"6":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":34}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"7":{"range":{"start":{"row":28,"column":33},"end":{"row":28,"column":39}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"8":{"range":{"start":{"row":30,"column":35},"end":{"row":30,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"9":{"range":{"start":{"row":37,"column":37},"end":{"row":37,"column":48}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"10":{"range":{"start":{"row":39,"column":65},"end":{"row":39,"column":73}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"11":{"range":{"start":{"row":42,"column":104},"end":{"row":42,"column":104}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"12":{"range":{"start":{"row":42,"column":29},"end":{"row":42,"column":104}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"13":{"range":{"start":{"row":42,"column":104},"end":{"row":42,"column":104}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"14":{"range":{"start":{"row":43,"column":31},"end":{"row":43,"column":45}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"15":{"range":{"start":{"row":43,"column":45},"end":{"row":43,"column":45}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"16":{"range":{"start":{"row":44,"column":34},"end":{"row":44,"column":49}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"17":{"range":{"start":{"row":44,"column":49},"end":{"row":44,"column":49}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"18":{"range":{"start":{"row":46,"column":65},"end":{"row":46,"column":65}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"19":{"range":{"start":{"row":47,"column":39},"end":{"row":47,"column":39}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"20":{"range":{"start":{"row":48,"column":47},"end":{"row":48,"column":47}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"21":{"range":{"start":{"row":50,"column":65},"end":{"row":50,"column":65}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"22":{"range":{"start":{"row":52,"column":47},"end":{"row":52,"column":47}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"23":{"range":{"start":{"row":54,"column":55},"end":{"row":54,"column":55}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"24":{"range":{"start":{"row":56,"column":38},"end":{"row":56,"column":38}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"25":{"range":{"start":{"row":57,"column":49},"end":{"row":57,"column":49}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"26":{"range":{"start":{"row":63,"column":33},"end":{"row":63,"column":39}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"27":{"range":{"start":{"row":65,"column":35},"end":{"row":65,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"28":{"range":{"start":{"row":71,"column":0},"end":{"row":71,"column":35}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"29":{"range":{"start":{"row":72,"column":0},"end":{"row":72,"column":86}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"30":{"range":{"start":{"row":72,"column":0},"end":{"row":72,"column":86}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"31":{"range":{"start":{"row":72,"column":0},"end":{"row":72,"column":86}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"32":{"range":{"start":{"row":13,"column":4},"end":{"row":13,"column":34}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"},"33":{"range":{"start":{"row":86,"column":1},"end":{"row":86,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mailer.js","digestWhenLastPersisted":"33733cf7f12870496d36e9a11f4f9e70bf95f2fc","preferredLineEnding":null,"nextMarkerId":35,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":1210,"items":[{"deserializer":"TextEditor","id":1241,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1242,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/config.js","bufferId":"ca8b1061d32ea5bf5230eba8a0e40eb4","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":1313,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1314,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/segments.js","bufferId":"87af0bc03e6756f98678b9f1ff9cb75d","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":1267,"softTabs":true,"firstVisibleScreenRow":194,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1268,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/index.js","bufferId":"f76245b3bdb14f981b6de4fbb225c191","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"SettingsView","version":2,"activePanelName":"sync-settings","uri":"atom://config"},{"deserializer":"AboutView","uri":"atom://about"},{"deserializer":"TextEditor","id":1449,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1450,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mailer.js","bufferId":"b013f0a8ebb62848759337d3620c8be2","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":1323,"softTabs":true,"firstVisibleScreenRow":222,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1324,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/helpers.js","bufferId":"6857a40d2a420a7c4ca694b4a110cc2e","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"atom://config","focused":true,"flexScale":1},"activePaneId":1210},"packagesWithActiveGrammars":["language-javascript-better","language-javascript","language-hyperlink","language-todo"],"destroyedItemURIs":["/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/model/User.js","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/model/PreUser.js","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/lib/segmentEmailsCSV.js","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/index.js","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/lib/testMandrillTemplate.js","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mandrill.js","/usr/bin/archey","/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/citymapper.js","/home/bellahora-04/.atom/styles.less"]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-05-10T09:47:13.429Z","version":"1.0.1","markersVersion":"1.0.6","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"1241":{"id":1241,"path":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/config.js","colorMarkers":[]},"1267":{"id":1267,"path":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/index.js","colorMarkers":[{"markerId":"10000","bufferRange":[[163,42],[163,74]],"color":[0,0,0,1],"text":"difference(emails, avoidEmails))","variables":[],"invalid":true}]},"1313":{"id":1313,"path":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/segments.js","colorMarkers":[{"markerId":"209","bufferRange":[[125,25],[125,67]],"color":[0,0,0,1],"text":"difference(_.uniq(emails), emailsToIgnore)","variables":[],"invalid":true},{"markerId":"210","bufferRange":[[164,19],[164,46]],"color":[0,0,0,1],"text":"difference(tUsers, prevent)","variables":[],"invalid":true},{"markerId":"211","bufferRange":[[390,37],[390,79]],"color":[0,0,0,1],"text":"difference(_.uniq(emails), emailsToIgnore)","variables":[],"invalid":true},{"markerId":"212","bufferRange":[[448,37],[448,79]],"color":[0,0,0,1],"text":"difference(_.uniq(emails), emailsToIgnore)","variables":[],"invalid":true}]},"1323":{"id":1323,"path":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/helpers.js","colorMarkers":[]},"1449":{"id":1449,"path":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mailer.js","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/config.js":1456733513688,"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/segments.js":1462863161187,"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/index.js":1462863103058,"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mailer.js":1462863155561,"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/jobs/mailing/helpers.js":1462861713987},"keybinding-resolver":{},"metrics":{"sessionLength":13389369},"tabs":[{"previewTabURI":"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs/common/utils/mailer.js"}],"tree-view":{"directoryExpansionStates":{"/home/bellahora-04/Bellahora/bellahora-jobs-system-boobs":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},".idea":{"isExpanded":false,"entries":{}},"common":{"isExpanded":true,"entries":{"cmd":{"isExpanded":false,"entries":{}},"controller":{"isExpanded":false,"entries":{}},"model":{"isExpanded":false,"entries":{}},"utils":{"isExpanded":true,"entries":{"agreement":{"isExpanded":false,"entries":{}},"commissions":{"isExpanded":false,"entries":{}},"geoip":{"isExpanded":false,"entries":{}},"paymentSystem":{"isExpanded":false,"entries":{}},"podio":{"isExpanded":false,"entries":{}},"sendgrid":{"isExpanded":false,"entries":{}},"shade":{"isExpanded":false,"entries":{}},"workcollisions":{"isExpanded":false,"entries":{}}}}}},"jobs":{"isExpanded":true,"entries":{"kpi":{"isExpanded":false,"entries":{}},"mailing":{"isExpanded":true,"entries":{"blocks":{"isExpanded":false,"entries":{}},"css":{"isExpanded":false,"entries":{}},"templates":{"isExpanded":false,"entries":{}}}},"monthlyStatistics":{"isExpanded":false,"entries":{}}}},"lib":{"isExpanded":true,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}}}}},"hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":217},"find-and-replace":{"findOptions":{"findPattern":"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}},"fullScreen":false}